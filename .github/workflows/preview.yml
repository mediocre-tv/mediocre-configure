name: Preview

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  SERVICE_NAME: "@buf/broomy_mediocre.community_timostamm-protobuf-ts"
  SERVICE_REPOSITORY: "obroomhall/mediocre-service"
  CONFIGURE_REPOSITORY: "obroomhall/mediocre-configure"
  BASE_DEPLOYMENT_URL: "configure.mediocre.tv"

on:
  push:
    branches-ignore:
      - master
    paths:
      - .github/workflows/preview.yml
      - public/**
      - src/**
      - index.*
      - package.json
      - package-lock.json
      - vite.config.ts

jobs:
  preview:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Add GitHub Deployment
        id: deployment
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          id=$(gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ env.CONFIGURE_REPOSITORY }}/deployments \
            -F "ref={branch}" \
            -F "required_contexts[]" \
            -F "auto_merge=false" \
            -F "environment=Preview" \
            --jq ".id")
          echo "Deployment id: $id"
          echo "id=$id" >> "$GITHUB_OUTPUT"
      - name: Install Vercel CLI
        run: npm install --global vercel@canary
      - name: Get Service Branch
        id: service_branch
        run: |
          service_branch=$(cat package.json \
            | grep '"${{ env.SERVICE_NAME }}": "label-' \
            | sed -r 's`^\s+"${{ env.SERVICE_NAME }}": "label-(.+)",$`\1`')
          echo "Service branch: $service_branch"
          echo "branch=$service_branch" >> "$GITHUB_OUTPUT"
      - name: Get Service PR
        id: service_pr
        if: ${{ steps.service_branch.outputs.branch && steps.service_branch.outputs.branch != 'master' }}
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          service_pr=$(gh pr list --repo ${{ env.SERVICE_REPOSITORY }} --head ${{ steps.service_branch.outputs.branch }} --json number --jq ".[0].number")
          echo "Service PR: $service_pr"
          echo "pr=$service_pr" >> "$GITHUB_OUTPUT"
      - name: Get Service Port
        id: service_port
        if: ${{ steps.service_pr.outputs.pr }}
        run: |
          service_port=$(printf "1%04d" ${{ steps.service_pr.outputs.pr }})
          echo "Service port: $service_port"
          echo "port=$service_port" >> "$GITHUB_OUTPUT"
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        id: deploy
        run: |
          vercel deploy \
            --token=${{ secrets.VERCEL_TOKEN }} \
            --build-env VITE_CLIENT_DOMAIN=${{ steps.service_port.outputs.port && 'preview.mediocre.tv' || 'client.mediocre.tv' }} \
            --build-env VITE_CLIENT_HTTPS_PORT=${{ steps.service_port.outputs.port || '443' }} \
            > url.txt
          
          url=$(cat url.txt)
          echo "url=$url" >> "$GITHUB_OUTPUT"
      - name: Add GitHub Deployment
        if: always()
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ env.CONFIGURE_REPOSITORY }}/deployments/${{ steps.deployment.outputs.id }}/statuses \
            -f "state=${{ job.status }}" \
            -F "auto_inactive=false" \
            -f "environment_url=${{ steps.deploy.outputs.url }}"
